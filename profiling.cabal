name:                profiling
version:             0.0.0
synopsis:            Example for the course TIES341
description:         Optimize your code in ten easy steps!
license:             GPL-3
license-file:        LICENSE
author:              Sampsa Kiiskinen
maintainer:          tuplanolla@gmail.com
category:            Education
build-type:          Simple
cabal-version:       >=1.10

-- Write a working implementation.
executable vmc
  main-is:             VMC.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts

-- Replace algebraic datatypes with renamed datatypes or type synonyms.
-- Modify shell resource limits to avoid freezing your system.
executable step-1
  main-is:             Step1.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts

-- Split records based on the most common use cases.
-- Measure effects with GNU Core Utilities or such.
executable step-2
  main-is:             Step2.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts

-- Cache function calls and float bindings outside enclosing lambdas.
-- Experiment with alternative implementations.
executable step-3
  main-is:             Step3.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts

-- Pull demanding computations out of recursive functions.
-- Tweak the programming interface slightly.
executable step-4
  main-is:             Step4.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts

-- Leverage types from existing libraries.
-- Turn on aggressive automatic optimization.
executable step-5
  main-is:             Step5.hs
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -rtsopts

-- Sprinkle strictness annotations and inline pragmas all over the place.
-- Measure productivity with GHC RTS.
executable step-6
  main-is:             Step6.hs
  other-extensions:    BangPatterns
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -rtsopts

-- Add constraints for unboxed types and try unpacking records.
-- Constrain the programming interface considerably.
executable step-7
  main-is:             Step7.hs
  other-extensions:    BangPatterns
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       random >=1.0 && <2.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -rtsopts

-- Employ specialized libraries.
-- Consider choosing another backend.
executable step-8
  main-is:             Step8.hs
  other-extensions:    BangPatterns
  build-depends:       base >=4.8 && <5.0,
                       mtl >=2.2 && <3.0,
                       mwc-random >=0.13 && <1.0,
                       primitive >=0.6 && <1.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -fprof-cafs -rtsopts
                       -fllvm -optlo-O3 -pgmlc llc-3.5 -pgmlo opt-3.5

-- Move from polymorphic lifted types to monomorphic primitive types.
-- Inspect the generated code and sacrifice the programming interface.
executable step-9
  main-is:             Step9.hs
  other-extensions:    BangPatterns, MagicHash, UnboxedTuples
  build-depends:       base >=4.8 && <5.0,
                       ghc-prim >=0.4 && <1.0,
                       mtl >=2.2 && <3.0,
                       mwc-random >=0.13 && <1.0,
                       primitive >=0.6 && <1.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -fprof-cafs -rtsopts
                       -fllvm -optlo-O3 -pgmlc llc-3.5 -pgmlo opt-3.5

-- Cater to specialized hardware.
-- Make a mess with the C preprocessor.
executable step-10
  main-is:             Step10.hs
  other-extensions:    BangPatterns, CPP, MagicHash, UnboxedTuples
  build-depends:       base >=4.8 && <5.0,
                       ghc-prim >=0.4 && <1.0,
                       mtl >=2.2 && <3.0,
                       mwc-random >=0.13 && <1.0,
                       primitive >=0.6 && <1.0,
                       vector >=0.10 && <1.0
  default-language:    Haskell2010
  ghc-options:         -O3 -Wall -fno-warn-name-shadowing
                       -fprof-auto -fprof-cafs -rtsopts
                       -fllvm -optlo-O3 -pgmlc llc-3.5 -pgmlo opt-3.5
--                     -mavx2 -fno-prof-auto -fno-prof-cafs -no-rtsopts

-- Replace the algorithm with a better one.
-- Everything else was pointless after all.
executable qho
  main-is:             QHO.hs
  build-depends:       base >=4.8 && <5.0
  default-language:    Haskell2010
  ghc-options:         -O0 -Wall -fno-warn-name-shadowing
                       -rtsopts
